    pipeline {
        agent any
        parameters {
            choice(name: 'SERVICE', choices: ['colony-command', 'colony-query'], description: 'Currently tested service')
            string(name: 'COLONY_COMMAND_VERSION', defaultValue: 'latest', description: 'Version to test')
            string(name: 'COLONY_QUERY_VERSION', defaultValue: 'latest', description: 'Version to test')
        }
        stages {
            stage('Docker pull') {
                steps {
                    echo 'Docker pull...'
                    echo "Project ${SERVICE}: ${params.COLONY_COMMAND_VERSION}:${params.COLONY_QUERY_VERSION}"
                }
            }
            stage('Run e2e') {
                steps {
                    echo 'run e2e...'
                }
            }
            stage('Write version to file') {
                steps {
                    script {
                        git(
                            url: 'https://ajjjjjjjj@github.com/ajjjjjjjj/jenkins-pipeline-library.git',
                            credentialsId: 'git-credentials-id',
                            branch: 'master'
                        )

                        try {
                            def fileContents = readFile("${params.SERVICE}-version.txt")
                            echo "file contents: ${fileContents}"
                        } catch (Exception e){
                            echo "file do not exists"
                        }
                        writeFile(file: "${params.SERVICE}-version.txt", text: params.COLONY_COMMAND_VERSION, encoding: "UTF-8")
                        //echo 'git add...'
                        //sh(script: "git checkout master")
                        //sh(script: "git config user.email \"ajjjjjjjj@github.com\"")
                        //sh(script: "git config user.name \"stefan\"")

                        withCredentials([usernamePassword(credentialsId: 'git-credentials-id', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                            sh(script: "git add ${params.SERVICE}-version.txt")
                            sh(script: "git commit -m 'Updated ${params.SERVICE}-version.txt to ${params.COLONY_QUERY_VERSION}'")
                            sh('git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/ajjjjjjjj/jenkins-pipeline-library.git')
                            //sh(script: "git push origin master")
                        }
                    }
                }
            }
        }
    }